#!/bin/bash
PATH=$PATH:/opt/vc/bin:/root:/usr/local/bin/
# choose a memdisk here to avoid wearing out sd card
CAM_OUT="/tmp/cam_out.jpg"
OCR_DEBUG_OUT="/tmp/ocr_debug.jpg"
OCR_META="/tmp/ocr_meta"
TOKEN1="/tmp/token1"
TOKEN2="/tmp/token2"
# "precision" when syncing
# the amount of samples used for the average in determining the token change phase
c=10

if [ ! -e $OCR_META ]; then
    touch $OCR_META
fi

i2cset -y 1 0x70 0x02 0x00
i2cset -y 1 0x70 0x04 0xD0
i2cset -y 1 0x70 0x05 0x12
i2cset -y 1 0x70 0x07 0x16

# turn all leds on
i2cset -y 1 0x70 0x00 0x5a
#echo -n "flash. "
# take picture
raspistill -q 95 -n -drc high -o $CAM_OUT -t 3
#echo -n "snap. "
# turn all leds off
i2cset -y 1 0x70 0x00 0x00

ROT=2
C_X=150
C_Y=730
C_W=1380
C_H=390
SHEAR=0
IGNORE=10
N=20
THR=27
DEBUG=""

if [ $1 = "--debug" ]; then
    DEBUG="--debug-image=$OCR_DEBUG_OUT"
fi

mogrify -crop "${C_W}x${C_H}+${C_X}+${C_Y}" -scale 25% $CAM_OUT
#ssocr $DEBUG -T -d 6 -i $IGNORE rotate $ROT crop $C_X $C_Y $C_W $C_H shear $SHEAR remove_isolated opening 3 white_border 17 $CAM_OUT 2>&1 | tee $TOKEN1 &
#ssocr $DEBUG -T -d 6 rotate $ROT $CAM_OUT 2>&1 | tee $TOKEN1 &
ssocr $DEBUG -T -d 6 rotate $ROT $CAM_OUT 2>/dev/null >$TOKEN1 &

sleep 1

if grep -q -E "[0-9]{6}" $TOKEN1; then
    #echo "saw a number ($(cat $TOKEN1))"
    # if not synced
    if grep -v -q "synced" $OCR_META || [ ! -s $OCR_META ]
        then
            #echo "not synced yet"
            # if there is not enough data
            if [ $(tail -$c $OCR_META | wc -l) -ne $c ]
                then
                    #echo "collecting data"
                    # if this is a new number
                    if grep -v -q $(cat $TOKEN1) $TOKEN2 || [ ! -s $OCR_META ]
                        then
                            # create a new line with 0 weight
                            echo "$(date +%S) 0" | tee -a $OCR_META
                        else
                            # if repeat, increase weigth
                            current_weight=$(tail -1 /tmp/ocr_meta 2>/dev/null | cut -d' ' -f 2)
                            weight=$(expr $current_weight + 1)
                            echo new weight = $weight
                            if [ $(tail -1 /tmp/ocr_meta 2>/dev/null | wc -c) == "3" ]
                                then
                                    sed -i -e "\$a $weight" $OCR_META
                                else
                                    sed -i -e "$ s/\([0-9]\{2\} \).*/\1$weight/g" $OCR_META
                            fi
                    fi 
                else
                    sum=0
                    for i in $(sort -k 2 -n $OCR_META | tail -$c | cut -f 1 -d' '); do
                        sum=$(expr $sum + $i)
                    done
                    avg=$(expr $sum / $c)
                    echo synced to $avg seconds
                    echo "synced $avg" >$OCR_META
            fi
    fi 
    cp $TOKEN1 $TOKEN2
fi
